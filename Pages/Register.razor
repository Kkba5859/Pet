@page "/register"
@using Pet.Services.Users
@using Pet.Models
@inject NavigationManager Navigation
@inject IRegisterService RegisterService

<h3 class="text-center my-4">Register</h3>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <EditForm Model="registerModel" OnValidSubmit="HandleRegister">
                <DataAnnotationsValidator />
                <ValidationSummary class="alert alert-danger" />

                <div class="form-group mb-3">
                    <label for="username" class="form-label">Username</label>
                    <InputText id="username" class="form-control" @bind-Value="registerModel.Username" />
                </div>
                <div class="form-group mb-3">
                    <label for="password" class="form-label">Password</label>
                    <InputText id="password" class="form-control" @bind-Value="registerModel.Password" type="password" />
                </div>
                <button type="submit" class="btn btn-success w-100">Register</button>
            </EditForm>

            <div class="text-center mt-3">
                <p>Already registered? <a href="/login">Login</a></p>
            </div>

            @if (!string.IsNullOrEmpty(Message))
            {
                <div class="alert alert-danger text-center mt-3">
                    @Message
                </div>
            }
        </div>
    </div>
</div>

@code {
    private UserDto registerModel = new();
    private string Message = "";

    private async Task HandleRegister()
    {
        try
        {
            var result = await RegisterService.Register(registerModel.Username, registerModel.Password);
            if (result)
            {
                Navigation.NavigateTo("/login");
            }
            else
            {
                Message = "Registration failed. Please try again.";
            }
        }
        catch (Exception ex)
        {
            Message = $"Error: {ex.Message}";
        }
    }

}
