@page "/admin-login"
@using Pet.Services.Admins
@using Pet.Models
@inject IAdminLoginService AdminLoginService
@inject NavigationManager Navigation

<h3 class="text-center my-4">Admin Login</h3>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary class="alert alert-danger" />

                <div class="form-group mb-3">
                    <label for="username" class="form-label">Username</label>
                    <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
                </div>
                <div class="form-group mb-3">
                    <label for="password" class="form-label">Password</label>
                    <InputText id="password" class="form-control" @bind-Value="loginModel.Password" type="password" />
                </div>
                <button type="submit" class="btn btn-primary w-100">Login</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private AdminLoginModel loginModel = new();

    private async Task HandleLogin()
    {
        var success = await AdminLoginService.Login(loginModel);
        if (success)
        {
            // Перенаправление на панель администратора после успешного входа
            Navigation.NavigateTo("/admin-dashboard");
        }
        else
        {
            // В случае неудачного входа, можно отобразить сообщение об ошибке
            Console.WriteLine("Login failed");
        }
    }
}
